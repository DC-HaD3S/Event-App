openapi: 3.0.0
info:
  title: NeoFi Event Management API
  version: 1.0.0
  description: A RESTful API for collaborative event management with role-based access control, versioning, and changelog features.
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required: [username, email, password]
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        enum: [Owner, Editor, Viewer]
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  token_type:
                    type: string
        "400":
          description: Username already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
  /api/auth/login:
    post:
      summary: Login and receive JWT tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  token_type:
                    type: string
        "400":
          description: Missing username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/auth/refresh:
    post:
      summary: Refresh JWT access token
      security:
        - BearerAuth: []
      responses:
        "200":
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        "401":
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/auth/logout:
    post:
      summary: Logout user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events:
    post:
      summary: Create a new event
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                location:
                  type: string
                is_recurring:
                  type: boolean
                recurrence_pattern:
                  type: string
              required: [title, description, start_time, end_time]
      responses:
        "200":
          description: Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                  owner_id:
                    type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "409":
          description: Event conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
    get:
      summary: List all events the user has access to
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        description:
                          type: string
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        location:
                          type: string
                        is_recurring:
                          type: boolean
                        recurrence_pattern:
                          type: string
                        owner_id:
                          type: integer
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
        "400":
          description: Invalid date format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}:
    get:
      summary: Get an event by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                  owner_id:
                    type: integer
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update an event by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                location:
                  type: string
                is_recurring:
                  type: boolean
                recurrence_pattern:
                  type: string
              required: [title, description, start_time, end_time]
      responses:
        "200":
          description: Event updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                  owner_id:
                    type: integer
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "409":
          description: Event conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
    delete:
      summary: Delete an event by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Only owner can delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Event not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/batch:
    post:
      summary: Create multiple events in a single request
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                required: [title, description, start_time, end_time]
      responses:
        "200":
          description: Events created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    location:
                      type: string
                    is_recurring:
                      type: boolean
                    recurrence_pattern:
                      type: string
                    owner_id:
                      type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
  /api/events/{id}/share:
    post:
      summary: Share an event with a user
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                role:
                  type: string
                  enum: [Owner, Editor, Viewer]
              required: [user_id, role]
      responses:
        "200":
          description: Permission created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  role:
                    type: string
                    enum: [Owner, Editor, Viewer]
        "400":
          description: Permission already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: Only owner can share
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
  /api/events/{id}/permissions:
    get:
      summary: List all permissions for an event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    role:
                      type: string
                      enum: [Owner, Editor, Viewer]
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}/permissions/{user_id}:
    put:
      summary: Update permissions for a user
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [Owner, Editor, Viewer]
              required: [role]
      responses:
        "200":
          description: Permission updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  role:
                    type: string
                    enum: [Owner, Editor, Viewer]
        "403":
          description: Only owner can update permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: object
    delete:
      summary: Remove access for a user
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Permission deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Only owner can delete permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}/history/{version_id}:
    get:
      summary: Get a specific version of an event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event version details
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                  modified_by:
                    type: integer
                  modified_at:
                    type: string
                    format: date-time
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Version not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}/rollback/{version_id}:
    post:
      summary: Rollback to a previous event version
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Event rolled back
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_recurring:
                    type: boolean
                  recurrence_pattern:
                    type: string
                  owner_id:
                    type: integer
        "403":
          description: Only owner can rollback
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Version not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}/changelog:
    get:
      summary: Get changelog for an event
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Changelog entries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    version:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    location:
                      type: string
                    is_recurring:
                      type: boolean
                    recurrence_pattern:
                      type: string
                    modified_by:
                      type: integer
                    modified_at:
                      type: string
                      format: date-time
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/events/{id}/diff/{version_id1}/{version_id2}:
    get:
      summary: Get a diff between two event versions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: version_id1
          in: path
          required: true
          schema:
            type: integer
        - name: version_id2
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Diff between versions
          content:
            application/json:
              schema:
                type: object
                properties:
                  diff:
                    type: object
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: One or both versions not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
